{"version":3,"sources":["../../src/pages/energy-query/energy-query.module.ts","../../src/pages/energy-query/energy-query.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AACqB;AAWtE;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QARjC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,sEAAe;aAChB;YACD,OAAO,EAAE;gBACP,8DAAe,CAAC,QAAQ,CAAC,sEAAe,CAAC,EAAC,uFAAgB;aAC3D;SACF,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACdQ;AACe;AACG;AAC5D,uDAAuD;AACO;AAE9D;;;;;GAKG;AAOH;IAOE,yBAAmB,OAAsB,EAAS,SAAoB,EAC5D,KAAoB;QADX,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC5D,UAAK,GAAL,KAAK,CAAe;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,+EAAY,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,wCAAc,GAAd;IACA,CAAC;IACD,wCAAc,GAAd;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACrC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,KAAK,+EAAY,CAAC,IAAI,EAAE,CAAC;gBACvB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;gBAAC,KAAK,CAAC;YACrC,CAAC;YACD,KAAK,+EAAY,CAAC,KAAK,EAAE,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;gBAAC,KAAK,CAAC;YACxC,CAAC;YACD,KAAK,+EAAY,CAAC,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;gBAAC,KAAK,CAAC;YAC3C,CAAC;QACH,CAAC;IACH,CAAC;IACD,wCAAc,GAAd,UAAe,IAAU;QACvB,IAAI,MAAW,CAAC;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACT,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,GAAG;gBACP,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;QACH,CAAC;QACD,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,mCAAS,GAAT,UAAU,IAAY;QACpB,IAAI,IAAI,CAAC;QACT,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,SAAS,EAAE,CAAC;gBACf,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;gBACpC,KAAK,CAAC;YACR,CAAC;YACD,KAAK,MAAM,EAAE,CAAC;gBACZ,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;gBACjC,KAAK,CAAC;YACR,CAAC;YACD,KAAK,OAAO,EAAE,CAAC;gBACb,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAClC,KAAK,CAAC;YACR,CAAC;QACH,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAE5B,CAAC;IAhEU,eAAe;QAJ3B,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;2FAQsE;YACrD,YAAa;OARnB,eAAe,CAkE3B;IAAD,CAAC;AAAA;SAlEY,eAAe,gB","file":"22.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EnergyQueryPage } from './energy-query';\nimport { ComponentsModule } from '../../components/components.module';\n\n\n@NgModule({\n  declarations: [\n    EnergyQueryPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EnergyQueryPage),ComponentsModule\n  ],\n})\nexport class EnergyQueryPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/energy-query/energy-query.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { ToolsProvider } from '../../providers/tools/tools';\n// import { BarchartPage } from '../barchart/barchart';\nimport { EnumDateType } from '../../providers/model/enumdata';\n\n/**\n * Generated class for the EnergyQueryPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-energy-query',\n  templateUrl: 'energy-query.html',\n})\nexport class EnergyQueryPage {\n  name: string;\n  type: string;\n  dateType: EnumDateType;\n  displayFormat: string;\n  startDate: string;\n  stopDate: string;\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n    private tools: ToolsProvider) {\n    this.name = this.navParams.get('name');\n    this.type = this.navParams.get('type');\n    this.dateType = EnumDateType.Day;\n    this.dateTypeChange();\n  }\n\n  ionViewDidLoad() {\n  }\n  dateTypeChange() {\n    let now = this.tools.getNowDateStr(this.dateType);\n    this.startDate = this.stopDate = now;\n    switch (this.dateType) {\n      case EnumDateType.Year: {\n        this.displayFormat = 'YYYY'; break;\n      }\n      case EnumDateType.Month: {\n        this.displayFormat = 'YYYY-MM'; break;\n      }\n      case EnumDateType.Day: {\n        this.displayFormat = 'YYYY-MM-DD'; break;\n      }\n    }\n  }\n  goBarChartPage(data?: any) {\n    let params: any;\n    if (data) {\n      params = data;\n    } else {\n      params = {\n        StartTime: this.startDate,\n        StopTime: this.stopDate,\n        DateType: this.dateType,\n      }\n    }\n    params.Type = this.type;\n    this.navCtrl.push('BarchartPage', { params: params });\n  }\n  timeRange(type: string) {\n    let data;\n    switch (type) {\n      case 'yearall': {\n        data = this.tools.getYearAllRange();\n        break;\n      }\n      case 'year': {\n        data = this.tools.getYearRange();\n        break;\n      }\n      case 'month': {\n        data = this.tools.getMonthRange();\n        break;\n      }\n    }\n    this.goBarChartPage(data);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/energy-query/energy-query.ts"],"sourceRoot":""}